buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://idcapture.bintray.com/plugins" }
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-snapshot" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

//        gradle versions plugin
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$comBertramlabsPluginsAssetPipelineGradle"
        classpath "org.grails.plugins:hibernate5:${gormVersion}"
        classpath "org.grails.plugins:quartz:2.0.13"

//        gradle versions plugin
        classpath "com.github.ben-manes:gradle-versions-plugin:0.51.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.18'
}

version "$tpatVersion"
group "tf.host"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

// gradle versions plugin
apply plugin: "com.github.ben-manes.versions"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion

    // ICL Artifactory Metadata
    artifactoryBaseUrl = 'https://artifactory.icl.gtri.org:443/artifactory/'
    artifactoryTrustmarkMavenReleaseRepoUrl = "$artifactoryBaseUrl" + "trustmark-maven"
    artifactoryExternalReleaseRepoUrl = "$artifactoryBaseUrl" + "external"
    artifactoryProxiedReleaseRepoUrl = "$artifactoryBaseUrl" + "proxied"
}


// ICL Artifactory Credentials
def iclArtifactoryUsername = System.getenv('ICL_ARTIFACTORY_USERNAME')
if (!iclArtifactoryUsername?.trim()) {
    iclArtifactoryUsername = project.properties['artifactoryUsername']
}

def iclArtifactoryPassword = System.getenv('ICL_ARTIFACTORY_PASSWORD')
if (!iclArtifactoryPassword?.trim()) {
    iclArtifactoryPassword = project.properties['artifactoryPassword']
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://repo.grails.org/grails/plugins" }
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases" }
//    maven { url "https://idcapture.bintray.com/plugins" }

    maven {
        name 'proxied'
        url artifactoryProxiedReleaseRepoUrl
        credentials {
            username iclArtifactoryUsername
            password iclArtifactoryPassword
        }
    }
    maven {
        name 'central'
        url artifactoryTrustmarkMavenReleaseRepoUrl

        credentials {
            username = iclArtifactoryUsername
            password = iclArtifactoryPassword
        }
    }
    maven {
        name 'icl-central'
        url artifactoryExternalReleaseRepoUrl

        credentials {
            username = iclArtifactoryUsername
            password = iclArtifactoryPassword
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    // TODO: this is needed to work out of docker
//    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    implementation( "org.grails:grails-core" ) {
        exclude group: 'org.fusesource.jansi', module: 'jansi:1.18'
    }
    implementation group: 'org.fusesource.jansi', name: 'jansi', version: '2.4.1'

    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web:5.0.5"

    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:gsp"
    implementation "org.grails.plugins:hibernate5"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.security:spring-security-taglibs:5.8.12"


    implementation 'org.grails:grails-web-jsp'
    implementation 'javax.servlet:jstl:1.2'
    implementation 'taglibs:standard:1.1.2'

    runtimeOnly "javax.servlet.jsp:javax.servlet.jsp-api:2.3.3"

    implementation "org.grails.plugins:hibernate-search:2.4.0"

    implementation "edu.gatech.gtri.trustmark:tf-grails-shared-views:0.9.5"

    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:4.3.0"
    runtimeOnly "javax.xml.bind:jaxb-api:2.4.0-b180830.0359"

    implementation "org.hibernate:hibernate-core:5.6.15.Final"
    implementation "org.hibernate:hibernate-ehcache:5.6.15.Final"
    implementation "org.hibernate:hibernate-search-orm:5.11.12.Final"

    implementation "org.codehaus.groovy:groovy-ant:3.0.21"
    implementation "org.codehaus.groovy:groovy-all:3.0.21"

    implementation 'org.grails.plugins:mail:4.0.0' // @see [https://repo.grails.org/grails/core/org/grails/plugins/mail] for any updates

    implementation 'org.grails.plugins:quartz:2.0.13' // For monitoring configuration directories periodically
    implementation 'org.quartz-scheduler:quartz:2.3.2'

    implementation 'edu.gatech.gtri.trustmark:tf-api:1.4.46'
    implementation 'edu.gatech.gtri.trustmark:tf-api-impl:1.4.74'
    implementation 'edu.gatech.gtri.trustmark:tf-api-reactor:1.4.46'
    implementation(platform("org.apache.logging.log4j:log4j-bom:2.23.1"))

    implementation 'org.fusesource.jansi:jansi:2.4.1' // For colored command line output
    implementation 'org.json:json:20240303'
    // For zip files.  @see http://stackoverflow.com/a/14656534
    implementation 'net.lingala.zip4j:zip4j:1.3.3'

    implementation 'commons-io:commons-io:2.13.0'

    implementation('org.apache.commons:commons-compress:1.26.1') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

    implementation 'org.freemarker:freemarker:2.3.32'

    testImplementation 'org.grails:grails-gorm-testing-support:3.2.2'
    testImplementation 'org.grails:grails-web-testing-support:3.2.2'
    testImplementation 'org.grails.plugins:geb:4.0.0'

    testImplementation 'org.seleniumhq.selenium:htmlunit-driver:4.13.0'
    testImplementation 'org.seleniumhq.selenium:selenium-remote-driver:4.20.0'
    testImplementation 'org.seleniumhq.selenium:selenium-api:4.20.0'
    testImplementation 'org.seleniumhq.selenium:selenium-support:4.20.0'
    testRuntimeOnly 'net.sourceforge.htmlunit:htmlunit:2.70.0'
    testRuntimeOnly 'org.seleniumhq.selenium:selenium-firefox-driver:4.20.0'
    testRuntimeOnly 'org.seleniumhq.selenium:selenium-chrome-driver:4.20.0'

    runtimeOnly 'org.apache.poi:poi-ooxml:3.17'

    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
}



tasks.withType(War).configureEach { War war ->
    war.dependsOn compileGroovyPages
}

war {
    enabled=true
    baseName = "tpat"
}

bootWar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    enabled = true
    dependsOn compileGroovyPages
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

integrationTest {
    systemProperties System.properties
}

assets {
    minifyJs = false
    minifyCss = false

    enableSourceMaps = true

    packagePlugin = false

    developmentRuntime = true
}

// copied from: http://nimavat.me/blog/grails3-add-custom-build-info-to-war
buildProperties {
    inputs.property("info.app.buildDate", new Date().format('yyyy-MM-dd HH:mm:ss'))
}

apply plugin: "maven-publish"

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "edu.gatech.gtri.trustmark"
            artifactId = "tpat"
            version = "$tpatVersion"

            from components.web
        }
    }

    repositories {
        maven {
            name 'central'
            url artifactoryTrustmarkMavenReleaseRepoUrl

            credentials {
                username = iclArtifactoryUsername
                password = iclArtifactoryPassword
            }
        }
    }
}

assets {
    packagePlugin = true
}
